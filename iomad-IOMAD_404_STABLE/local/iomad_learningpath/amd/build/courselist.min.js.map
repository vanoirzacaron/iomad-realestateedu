{"version":3,"file":"courselist.min.js","sources":["../src/courselist.js"],"sourcesContent":["//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module    local_learningpath\n * @copyright 2021 Derick Turner\n * @author    Derick Turner\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'jqueryui', 'core/config', 'core/ajax', 'core/notification', 'core/templates'],\n    function($, jqui, mdlcfg, ajax, notification, templates) {\n\n    return {\n\n        init: function(companyid, pathid) {\n\n            /**\n             * Function which filters the courses\n             * being displayed and renders the output\n             * via a template.\n             *\n             * @param {array} courses The list of courses which can be seen.\n             *\n             **/\n            function apply_filter(courses) {\n\n                // Show/hide 'no courses' message.\n                $('#prospectivelist li').remove();\n                if (courses.length) {\n                    $('#noprospective').hide();\n                } else {\n                    $('#noprospective').show();\n                    return;\n                }\n\n                // Template for course list\n                var context = {\n                    courses: courses,\n                    wwwroot: mdlcfg.wwwroot,\n                    prospective: true\n                };\n\n                templates.render('local_iomad_learningpath/prospectivelist', context)\n                    .done(function(html) {\n                        $('#prospectivelist').append(html);\n                    })\n                    .fail(notification.exception);\n            }\n\n            /**\n             * Function which gets the list courses\n             * and displays them.\n             *\n             **/\n            function course_list() {\n\n                var filter = $('#coursefilter').val();\n                var category = $('#category').val();\n                var program = $('#program').val();\n\n                // Ajax stuff to get list\n                // call the web service\n                ajax.call([{\n                    methodname: 'local_iomad_learningpath_getprospectivecourses',\n                    args: {pathid: pathid, filter: filter, category: category, program: program},\n                    done: function(courses) {\n                        apply_filter(courses);\n                    },\n                    fail: notification.exception,\n                }]);\n            }\n\n\n            $(window).on('load', course_list());\n            $('#program').on('change', function() {\n                course_list();\n                pathcourse_list();\n            });\n            $('#coursefilter').on('input', function() {\n                course_list();\n            });\n            $('#category').on('change', function() {\n                course_list();\n            });\n\n\n            $('#prospectivelist, .pathcourselist').on('mouseenter', 'li', function() {\n                $(this).addClass(\"text-primary\");\n            });\n            $('#prospectivelist, .pathcourselist').on('mouseleave', 'li', function() {\n                $(this).removeClass(\"text-primary\");\n            });\n\n            /**\n             * Function which adds the course to the learning path.\n             *\n             * @param {node} pcl The path list item.\n             * @param {courses} courses The list of courses being added.\n             *\n             **/\n            function apply_pathcourses(pcl, courses) {\n\n                // Show/hide 'no courses' message.\n                $(pcl).find('li').remove();\n                var groupid = $(pcl).data('groupid');\n                var nogroupcourses = $(\".nogroupcourses[data-groupid='\" + groupid + \"']\");\n                if (courses.length) {\n                    nogroupcourses.hide();\n                } else {\n                    nogroupcourses.show();\n                    return;\n                }\n\n                // Template for course list\n                var context = {\n                    courses: courses,\n                    wwwroot: mdlcfg.wwwroot,\n                    prospective: false\n                };\n\n                templates.render('local_iomad_learningpath/pathcourselist', context)\n                    .done(function(html) {\n                        $(pcl).append(html);\n                    })\n                    .fail(notification.exception);\n            }\n\n            /**\n             * Function which lists the courses in the path.\n             *\n             **/\n            function pathcourse_list() {\n\n                // Ajax stuff to get list\n                // call the web service\n                $(\".pathcourselist\").each(function() {\n                    var pcl = this;\n                    var groupid = $(pcl).data('groupid');\n                    ajax.call([{\n                        methodname: 'local_iomad_learningpath_getcourses',\n                        args: {pathid: pathid, groupid: groupid},\n                        done: function(courses) {\n                            apply_pathcourses(pcl, courses);\n                        },\n                        fail: notification.exception,\n                    }]);\n                });\n            }\n\n            $(window).on('load', pathcourse_list());\n\n            $('#prospectivelist').on('click', '.path-add', function() {\n                var courseid = $(this).data('courseid');\n\n                // Add the course to the path\n                ajax.call([{\n                    methodname: 'local_iomad_learningpath_addcourses',\n                    args: {pathid: pathid, courseids: [courseid]},\n                    done: function() {\n                        pathcourse_list();\n                        course_list();\n                    },\n                    fail: notification.exception,\n                }]);\n            });\n\n            $('.pathcourselist').on('click', '.path-delete', function() {\n                var courseid = $(this).data('courseid');\n\n                // Remove the course from the path\n                ajax.call([{\n                    methodname: 'local_iomad_learningpath_removecourses',\n                    args: {pathid: pathid, courseids: [courseid]},\n                    done: function() {\n                        pathcourse_list();\n                        course_list();\n                    },\n                    fail: notification.exception\n                }]);\n            });\n\n            /**\n             * Function which ensures the correct icons are being displayed to edit\n             * the courses in it.\n             *\n             **/\n            function fix_icons() {\n                $(\"#prospectivelist .path-delete\").removeClass('fa-trash path-delete').addClass('fa-plus path-add');\n                $(\".pathcourselist .path-add\").removeClass('fa-plus path-add').addClass('fa-trash path-delete');\n            }\n\n            $(\".pathcourselist\").sortable({\n                handle: '.lphandle',\n                connectWith: '#prospectivelist, .pathcourselist',\n                dropOnEmpty: true,\n                update: function() {\n\n                    // Get already selected courseids\n                    var courses = [];\n                    $(\".pathcourselist .pathbox\").each(function() {\n                        var courseid = $(this).data('courseid');\n                        var groupid = $(this).parent().parent().data('groupid');\n                        courses.push({courseid: courseid, groupid: groupid});\n                    });\n\n                    // Reorder\n                    ajax.call([{\n                        methodname: 'local_iomad_learningpath_ordercourses',\n                        args: {pathid: pathid, courses: courses},\n                        done: function() {},\n                        fail: notification.exception\n                    }]);\n\n                    fix_icons();\n                }\n            });\n\n            $('#prospectivelist').sortable({\n                handle: '.lphandle',\n                connectWith: '.pathcourselist',\n                dropOnEmpty: true,\n                update: function() {\n                    fix_icons();\n                }\n            });\n        }\n    };\n});\n"],"names":["define","$","jqui","mdlcfg","ajax","notification","templates","init","companyid","pathid","course_list","filter","val","category","program","call","methodname","args","done","courses","remove","length","hide","context","wwwroot","prospective","render","html","append","fail","exception","show","apply_filter","pathcourse_list","each","pcl","this","groupid","data","find","nogroupcourses","apply_pathcourses","fix_icons","removeClass","addClass","window","on","courseid","courseids","sortable","handle","connectWith","dropOnEmpty","update","parent","push"],"mappings":"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"}